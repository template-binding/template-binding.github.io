import{n as x,d as b,i as g,r as y,s as P,x as m,t as $}from"./numeral-0Wv2z1kl.js";/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */const v=(i,t,e)=>(e.configurable=!0,e.enumerable=!0,Reflect.decorate&&typeof t!="object"&&Object.defineProperty(i,t,e),e);/**
 * @license
 * Copyright 2017 Google LLC
 * SPDX-License-Identifier: BSD-3-Clause
 */function O(i,t){return(e,a,s)=>{const r=o=>{var d;return((d=o.renderRoot)==null?void 0:d.querySelector(i))??null};if(t){const{get:o,set:d}=typeof a=="object"?e:s??(()=>{const n=Symbol();return{get(){return this[n]},set(l){this[n]=l}}})();return v(e,a,{get(){let n=o.call(this);return n===void 0&&(n=r(this),(n!==null||this.hasUpdated)&&d.call(this,n)),n}})}return v(e,a,{get(){return r(this)}})}}class D{setProps(t,e){t.__$bind_props__=e}setData(t,e){t.__$bind_data__=e}setDataProvider(t,e){t.__$bind_data_provider__=e}setOptions(t,e){t.__$bind_data_options__=e}getProps(t){return t.__$bind_props__==null&&this.setProps(t,{}),t.__$bind_props__}getData(t){return t.__$bind_data__==null&&this.setData(t,{}),t.__$bind_data__}getDataProvider(t){return t.__$bind_data_provider__==null&&this.setDataProvider(t,{}),t.__$bind_data_provider__}getOptions(t){return t.__$bind_data_options__==null&&this.setOptions(t,{}),t.__$bind_data_options__}applyFormat(t,e){return typeof t=="number"||typeof t=="string"&&/^[+-]?(\d+|\d+\.\d*|\.\d+)([eE][+-]?\d+)?$/.test(t)?x(t).format(e):t instanceof Date?b(t).format(e):typeof t=="string"&&!isNaN(Date.parse(t))?b(t).format(e):(console.error("Unknown value type for formatting",t),t)}resolveValue(t,e,a="",s=void 0){let r=t;const o=e.split(".");for(const d of o){if(r==null)return a;const n=d.match(/^([^\[]+)(?:\[(\d+)\])?$/);if(n){const[,l,p]=n;r=r[l],r&&p!==void 0&&(r=r[parseInt(p,10)])}else r=r[d];if(r===void 0)return a}return s&&r!==void 0&&(r=this.applyFormat(r,s)),r}parseExpression(t){const[e,a]=t.split(":").map(o=>o.trim()),[s,r]=e.split("||").map(o=>o.trim());return{key:s,defaultValue:r,format:a}}applyProps(t,e,a){Object.keys(e).forEach(s=>{const r=e[s];if(r===void 0)t[s]=void 0;else if(typeof r=="string"&&r.includes("${")){const o=/^\$\{([^}]+)\}$/,d=/\$\{([^}]+)\}/g;if(o.test(r)){const n=o.exec(r);if(!n)return;const{key:l,defaultValue:p,format:u}=this.parseExpression(n[1]);t[s]=this.resolveValue(a,l,p,u)}else t[s]=r.replace(d,(n,l)=>{const{key:p,defaultValue:u,format:_}=this.parseExpression(l);return this.resolveValue(a,p,u,_)})}else typeof r=="object"?r===null?t[s]=null:Array.isArray(r)?(t[s]===void 0&&(t[s]=[]),t[s]=[...t[s]],this.applyProps(t[s],r,a)):(t[s]===void 0&&(t[s]={}),t[s]={...t[s]},this.applyProps(t[s],r,a)):t[s]=r})}async getDataByWebApiAsync(t){const e=t.url,a=t.method||"GET",s=t.headers||{},r={method:a,headers:s};if(a!=="GET"&&a!=="HEAD"){const d=t.body||{};r.body=JSON.stringify(d)}return await(await fetch(e,r)).json()}async getDataByProviderAsync(t){return t.type==="webapi"?await this.getDataByWebApiAsync(t):(console.debug("unknown data provider type",t),{})}async refreshData(t){const e=this.getDataProvider(t);if(e&&e.type){const a=await this.getDataByProviderAsync(e);console.log("refreshData",a),this.setData(t,a),this.refresh(t)}}startRefreshInterval(t,e){if(this.stopRefreshInterval(t),e>0){const a=this.getOptions(t);a.refreshIntervalId=setInterval(()=>{this.refreshData(t)},e)}}stopRefreshInterval(t){const e=this.getOptions(t),a=e.refreshIntervalId;a&&(clearInterval(a),e.refreshIntervalId=void 0)}binding(t){this.setProps(t.target,t.props),t.data&&this.setData(t.target,t.data),t.dataProvider&&this.updateDataProvider({target:t.target,dataProvider:t.dataProvider}),this.refresh(t.target)}updateProps(t,e=!0){this.setProps(t.target,t.props),e&&this.refresh(t.target)}updateData(t,e=!0){this.setData(t.target,t.data),e&&this.refresh(t.target)}updateDataProvider(t){this.setDataProvider(t.target,t.dataProvider),this.refreshData(t.target);const e=t.dataProvider.refreshInterval||0;this.startRefreshInterval(t.target,e)}refresh(t){const e=this.getProps(t),a=this.getData(t);this.applyProps(t,e,a)}}const f=new D;var S=Object.defineProperty,J=Object.getOwnPropertyDescriptor,c=(i,t,e,a)=>{for(var s=a>1?void 0:a?J(t,e):t,r=i.length-1,o;r>=0;r--)(o=i[r])&&(s=(a?o(t,e,s):o(s))||s);return a&&s&&S(t,e,s),s};let h=class extends P{constructor(){super(...arguments),this.props="",this.data="",this.dataProvider=""}handleInputChange(i,t){const e=i.target;this[t]=e.value}createRenderRoot(){return this}render(){return m`
      <div class="flex items-center justify-center h-screen">
        <div class="container mx-auto p-4">
          <h1 class="text-center text-xl font-bold mb-4">Bind TEST</h1>
          <h1 id="header" class="text-center text-xl font-bold mb-4">hello</h1>
          
          <div class="flex flex-wrap justify-center gap-4 mb-4">
            <button class="px-4 py-2 border border-gray-300 rounded" @click=${this.onAction1}>Props</button>
            <button class="px-4 py-2 border border-gray-300 rounded" @click=${this.onAction2}>Props + Data</button>
            <button class="px-4 py-2 border border-gray-300 rounded" @click=${this.onAction3}>DataProvider(WebAPI)</button>
            <button class="px-4 py-2 border border-gray-300 rounded" @click=${this.onAction4}>Collection</button>
            <button class="px-4 py-2 border border-gray-300 rounded" @click=${this.onActionFormat}>Format</button>
            <button class="px-4 py-2 border border-gray-300 rounded" @click=${this.onActionObservable}>Observable</button>
          </div>

          <div class="flex justify-center gap-4 mb-4 w-full">
            <div class="flex flex-col w-1/3">
              <label>Props:</label>
              <textarea .value=${this.props} class="form-textarea border border-gray-300 p-2 flex-1" style="min-width: 0; min-height: 200px" placeholder="props (JSON)" @input=${i=>this.handleInputChange(i,"props")}></textarea>
            </div>
            <div class="flex flex-col w-1/3">
              <label>Data:</label>
              <textarea .value=${this.data} class="form-textarea border border-gray-300 p-2 flex-1" style="min-width: 0;" placeholder="data (JSON)" @input=${i=>this.handleInputChange(i,"data")}></textarea>
            </div>            
            <div class="flex flex-col w-1/3">
              <label>Data Provider:</label>
              <textarea .value=${this.dataProvider} class="form-textarea border border-gray-300 p-2 flex-1" style="min-width: 0;" placeholder="dataProvider (JSON)" @input=${i=>this.handleInputChange(i,"dataProvider")}></textarea>
            </div>
          </div>
        </div>
      </div>
    `}firstUpdated(){this.header&&f.binding({target:this.header,props:this.props?JSON.parse(this.props):{},data:this.data?JSON.parse(this.data):{},dataProvider:this.dataProvider?JSON.parse(this.dataProvider):{}})}update(i){i.forEach((t,e)=>{e==="props"?this.header&&f.updateProps({target:this.header,props:JSON.parse(this.props||"{}")}):e==="data"?this.header&&f.updateData({target:this.header,data:JSON.parse(this.data||"{}")}):e==="dataProvider"&&this.header&&f.updateDataProvider({target:this.header,dataProvider:JSON.parse(this.dataProvider||"{}")})}),super.update(i)}onAction1(){this.props=JSON.stringify({innerText:"world",style:{background:"red"},bar:{foo:"lit-element",foo2:"lit-element2"}},null,2),this.data=JSON.stringify({}),this.dataProvider=JSON.stringify({})}onAction2(){this.props=JSON.stringify({innerText:"hello ${name}",style:{background:"${color}",color:"${textColor || orange}"},bar:{foo:"lit-element",foo2:"lit-element2"}},null,2),this.data=JSON.stringify({name:"sydney",color:"teal"},null,2),this.dataProvider=JSON.stringify({})}onAction3(){this.props=JSON.stringify({innerText:"my name is ${name || no-name} and my phone number is ${phone || 000-0000-0000}"},null,2),this.data=JSON.stringify({},null,2),this.dataProvider=JSON.stringify({type:"webapi",url:"https://jsonplaceholder.typicode.com/users/4",refreshInterval:1e3*3})}onAction4(){let i={innerText:"array object property: ${items[1].name},\narray value: ${messages[1]},\ndeep array: ${users[0].roles[0]}"},t={items:[{name:"sydney",phone:"010-0000-0000"},{name:"seoul",phone:"010-0000-0001"},{name:"busan",phone:"010-0000-0002"}],messages:["hello","world","!!"],users:[{id:"user1",roles:["manager","admin"]},{id:"user2",roles:["guest"]}]};this.props=JSON.stringify(i,null,2),this.data=JSON.stringify(t,null,2),this.dataProvider=JSON.stringify({})}onActionFormat(){let i={innerText:"today is ${date:YY/MM/DD}\ncost is $${cost:0,0.00}\ndateText is ${dateText:YY/MM/DD}\nnumberText is ${numberText:0,0.00}"},t={date:new Date,cost:4522e3,dateText:"2021-01-01",numberText:"1234567890"};this.props=JSON.stringify(i,null,2),this.data=JSON.stringify(t,null,2),this.dataProvider=JSON.stringify({})}onActionObservable(){location.href="/observable/"}};h.styles=g`
  `;c([O("#header")],h.prototype,"header",2);c([y()],h.prototype,"props",2);c([y()],h.prototype,"data",2);c([y()],h.prototype,"dataProvider",2);h=c([$("app-shell")],h);
