var p=Object.defineProperty;var b=(e,t,a)=>t in e?p(e,t,{enumerable:!0,configurable:!0,writable:!0,value:a}):e[t]=a;var c=(e,t,a)=>(b(e,typeof t!="symbol"?t+"":t,a),a);import{r as h,t as x,s as f,x as D}from"./numeral-EWvRXPHQ.js";class i{constructor(t,a){c(this,"callback");if(i.isObservable(t))return t;this.callback=a;const s=this;return new Proxy(t,{set:(r,o,n)=>{n&&typeof n=="object"&&!i.isObservable(n)&&(n=new i(n,s.callback));const u=r[o];return r[o]=n,s.callback&&s.callback(r,{property:o,oldValue:u,value:n}),!0},get:(r,o)=>o==="_observableInstance"?s:r[o]})}static isObservable(t){return t&&t._observableInstance instanceof i}static getPureObject(t){if(i.isObservable(t)){const a={...t};return Object.keys(a).forEach(s=>{i.isObservable(a[s])&&(a[s]=i.getPureObject(a[s]))}),a}return t}}function g(e,t){return new i(e,t)}var O=Object.defineProperty,y=Object.getOwnPropertyDescriptor,d=(e,t,a,s)=>{for(var r=s>1?void 0:s?y(t,a):t,o=e.length-1,n;o>=0;o--)(n=e[o])&&(r=(s?n(t,a,r):n(r))||r);return s&&r&&O(t,a,r),r};let l=class extends f{constructor(){super(),this.data={title:"hello-world",author:{name:"deni",email:"deni@xxx.oo"}},this.dataType=null,this.count=1,this.onChangedValue=this.onChangedValue.bind(this),this.requestUpdate=this.requestUpdate.bind(this),this.updateData()}createRenderRoot(){return this}render(){var e,t,a,s,r;return D`
      <div class="flex items-center justify-center h-screen">
        <div class="container mx-auto p-4">
        <h1 class="text-center text-xl font-bold mb-4">Observable TEST</h1>
          <h1 class="text-center text-xl mb-4">Data Title: ${(e=this.data)==null?void 0:e.title}</h1>
          <h1 class="text-center text-xl mb-4">Data Author: ${(a=(t=this.data)==null?void 0:t.author)==null?void 0:a.name}(${(r=(s=this.data)==null?void 0:s.author)==null?void 0:r.email})</h1>
          <h1 class="text-center text-xl font mb-4">Data Type: ${this.dataType}</h1>

          <div class="flex flex-wrap justify-center gap-4 mb-4">
            <button class="px-4 py-2 border border-gray-300 rounded" @click=${this.onUpdateData}>Update Data (Show Log)</button>
            <button class="px-4 py-2 border border-gray-300 rounded" @click=${this.onRequestUpdate}>Request UI Update</button>
            <button class="px-4 py-2 border border-gray-300 rounded" @click=${this.onToggleObservableData}>Toggle Observable Data</button>
          </div>
      </div>
    `}update(e){e.forEach((t,a)=>{a==="data"&&this.updateDataType()}),super.update(e)}updateDataType(){this.dataType=i.isObservable(this.data)?"Observable Object":"Pure Object"}onUpdateData(){this.updateData()}updateData(){let e=this.count++;this.data.title=`hello-world: ${e}`,this.data.author.name=`deni: ${e}`,this.data.author.email=`deni@xxx.oo: ${e}`,console.log("Update Data",this.data)}onRequestUpdate(){this.requestUpdate()}onToggleObservableData(){i.isObservable(this.data)?(this.updateData(),this.data=i.getPureObject(this.data)):(this.updateData(),this.data=g(this.data,this.requestUpdate)),this.updateDataType()}onChangedValue(e,t){console.log("onChangedValue",e,t),this.requestUpdate()}};d([h()],l.prototype,"data",2);d([h()],l.prototype,"dataType",2);l=d([x("app-shell")],l);
